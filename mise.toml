[tools]
python = "3.12"
node = "22"
pnpm = '10'


[tasks.db-up]
run = 'docker compose up -d --wait'


[tasks.electric-up]
run = "docker compose up -d electric"


[tasks.migrate]
depends = ['db-up']
run = 'uv run manage.py migrate'


[tasks.api]
depends = ['migrate']
run = 'granian --interface asginl core.asgi:application'


[tasks.dev-client]
run = 'pnpm --color run dev'


[tasks.dev]
depends = ['api', 'dev-client']

[tasks.'build:frontend']
run = '''
[ -z "${CI:-}" ] || pnpm -C frontend install
pnpm -C frontend build
'''

[tasks.'deploy:backend']
usage = '''
arg "deploy_host" default=""
arg "deploy_folder" default=""
'''
run = '''
host=${usage_deploy_host:-$DEPLOY_HOST}
folder=${usage_deploy_folder:-$DEPLOY_FOLDER}
git archive HEAD core tmp_app mise.toml compose.yaml | zstd | ssh $host "
  set -eu
  cd /srv/apps/$folder
  rm -rf **/migrations/*.py
  fd -t d __pycache__ -x rm -r '{}'
  tar --zstd -xf -
  mise x -- uv sync
"
'''

[tasks.deploy]
depends = ['build:frontend']
run = '''
scp -Cr dist/* ${DEPLOY_HOST}:/srv/apps/${DEPLOY_FOLDER}/client
mise run deploy:backend
ssh ${DEPLOY_HOST} "sudo service ${DEPLOY_FOLDER} restart"
'''

[env]

# PostgreSQL 
POSTGRES_USER = 'postgres'
POSTGRES_PASSWORD = 'postgres'
POSTGRES_DB = 'postgres'
POSTGRES_PORT = 5433
POSTGRES_HOST = 'localhost'

# Electric 
ELECTRIC_PORT = 3010
ELECTRIC_AUTH_JWT_ALG = 'HS256'
ELECTRIC_AUTH_JWT_KEY = 'SUPER_SECRET_JWT_KEY_CHANGE_ME'
ELECTRIC_INSECURE = true

# Django
ALLOWED_HOSTS = 'localhost 127.0.0.1 [::1]' 
DJANGO_DEBUG = 1 
DJANGO_SECRET_KEY = 'SECRET_KEY'


# Granian
GRANIAN_RELOAD = 0
GRANIAN_RELOAD_IGNORE_PATTERNS = '(?<!\.py)$'
GRANIAN_PORT = 8010
GRANIAN_WORKERS = 1 

# Python
PYTHONUNBUFFERED = 1
DEPLOY_FOLDER = 'electric'

MISE_UNIX_DEFAULT_INLINE_SHELL_ARGS = 'bash -c -euo pipefail'
